// 送信された複数のメッセージの情報をリストで表示するコンポーネントのファイル。
import React, { Component } from 'react';

class MessageList extends Component {

    constructor(props: any) {
        super(props);

        // タイマー処理によって1秒ごとに以下の操作を実行する。
        // 　１．ローカルストレージから、現在の最新のメッセージリストのデータを取得する。
        // 　２．ローカルストレージから値が取得できなければ、下記の３の処理は行わない。取得できれば、３の処理を実施する。
        // 　３．現在表示しているメッセージリストの更新日と、最新のメッセージリストの更新日を比較し、
        // 　　一致していなければメッセージリストの表示の更新を行う。（レデューサーにアクションを送信する。）

    }

    // リストで表示するメッセージの情報を、<div>～</div>の形で返却する。
    // メッセージの情報としては、reduxのstoreのstate中に保管されている以下の3つの値を用いる。
    // 　１．送信者の名前の文字列（1～10文字）※inputタグの設定で入力チェックを行う。
    // 　２．メッセージの内容の文字列（1～255文字）※inputタグの設定で入力チェックを行う。
    // 　３．メッセージの送信日時の文字列（YYYY-MM-DD HH:mm:ss）
    // 上記の3つの値を、Messageコンポーネントの属性として設定することで、メッセージを表示する。
    // また、ループ処理によって複数のMessageコンポーネントを作ることで、メッセージをリスト化して表示する。
    // Messageコンポーネントを作る際のkey値の設定は、メッセージ同士で重複しないように行う。
    // styleについてはMessageList.cssに従う。
    render() {

    }
}

// reduxのstoreのstateの値を、このコンポーネント内で取り出せるように、storeと接続を行う。
// （storeと接続することで、コンポーネント内でstore中のstateをthis.props.の形で取り出せる。）
// （また、storeのstateの値が変更された場合、stateの値を用いている箇所は再レンダリングされる。）

// 送信するメッセージの情報を入力するためのフォームを表示する。
import React, { Component } from 'react';

class SendMessageForm extends Component {

    constructor(props: any) {
        super(props);

        // 入力された「送信者名」と「メッセージ内容」を保管するためのstateを用意する。

        // formの内容に関してのイベントが発生した時に実施するdo～の関数について、
        // 関数内で使用されるthisのbindを行う。

    }

    // 名前フォームの入力値が変更された場合に、このコンポーネントのstateのname値を書き換える。
    doChangeName(e: any) {
        
        // 入力された値を、このコンポーネントのstate中に設定する。

    }

    // メッセージ内容フォームの入力値が変更された場合に、このコンポーネントのstateのcontent値を書き換える。
    doChangeContent(e: any) {

        // 入力された値を、このコンポーネントのstate中に設定する。

    }

    // フォームの内容が送信された場合に、メッセージリストに新しいメッセージを追加する。
    doSubmit(e: any) {

        // 現在の日時の文字列（YYYY-MM-DD HH:mm:ss）を生成する。
        // フォームから入力された【送信者名】【メッセージ内容】の情報を取得する。
        // 【送信者名】【メッセージ内容】【日時】の情報を用いて、メッセージリストに新しいメッセージを追加する。（レデューサーにアクションを送信する。）
        // コンポーネントのstate中の値を、初期値に戻す。

    }

    // フォームの表示のために、<div>～</div>の形で返却する。
    // 下記のようにフォームを配置する。
    // =========================================
    // 名前[名前の入力フォーム]
    // [メッセージ内容の入力フォーム][送信ボタン]
    // =========================================
    // 名前の入力フォームには、以下の設定を行う。
    // 　１．入力文字の最大長が10文字
    // 　２．入力を必須
    // 　３．入力フォームの直前に「名前」という文字を表示
    // メッセージ内容の入力フォームには、以下の設定を行う。
    // 　１．入力文字の最大長が255文字
    // 　２．入力を必須
    // 送信ボタンには、以下の設定を行う。
    // 　１．ボタン上に「送信」という文字を表示
    // styleについてはSendMessageForm.cssに従う。
    render() {

    }
}
